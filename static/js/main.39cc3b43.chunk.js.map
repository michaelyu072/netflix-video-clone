{"version":3,"sources":["components/ProgressControls.js","components/VolumeControls.js","components/Controls.jsx","components/Video.js","components/App.jsx","index.js"],"names":["ProgressControls","props","className","onClick","goToTime","style","width","percentageWatched","onDrag","event","stopPropagation","Math","floor","timeLeft","VolumeControls","onMouseEnter","showVolume","onMouseLeave","hideVolume","goToVolume","height","volumePercentage","Controls","useState","speedMenu","setSpeedMenu","volumeMenu","setVolumeMenu","currentSpeedStyle","background","color","opacity","showSpeedMenu","hideSpeedMenu","showVolumeMenu","hideVolumeMenu","volumeIcon","handlePlay","playButton","back10","forward10","mute","muteButton","videoSpeed","changeSpeed","fullscreen","fullscreenIcon","Video","thisVideo","useRef","thisVideoContainer","isPlaying","togglePlay","isMuted","toggleMute","isFullscreen","toggleFullscreen","setPercentageWatched","listened","updateListened","updateTimeLeft","updateSpeed","updateVolume","document","addEventListener","fullscreenElement","useEffect","current","currentTime","duration","ref","src","loop","pause","play","volume","muted","console","log","exitFullscreen","requestFullscreen","target","parent","offsetParent","time","pageX","offsetLeft","offsetWidth","value","playbackRate","values","getBoundingClientRect","top","bottom","distance","pageY","result","abs","min","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.39cc3b43.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ProgressControls(props) {\n\n\n    return <div className = 'progress-controls'>\n            \n            <div onClick = {props.goToTime} className = 'progress-bar'>\n\n                <div style ={{width : props.percentageWatched}} className = 'watched-bar'></div>\n\n                <div onDrag = {props.goToTime} onClick = {(event) => {event.stopPropagation();}}  className = 'playhead'></div>\n\n            </div>\n            <div className = 'time-remaining'>{ \n                Math.floor(props.timeLeft/60) + \":\" + (props.timeLeft%60>10 \n                                                        ? Math.floor(props.timeLeft%60) : \"0\" + Math.floor(props.timeLeft%60) ) \n            }</div>\n            \n\n            \n    </div>;\n}\n\nexport default ProgressControls;","import React from 'react';\n\n\nfunction VolumeControls(props) {\n\n    return <div  onMouseEnter = {props.showVolume} onMouseLeave = {props.hideVolume} className = 'volume-controls'>\n            \n    <div  onClick = {props.goToVolume} className = 'volume-bar'>\n\n    <div className = 'volume-head'></div>\n\n        <div style = {{height: (props.volumePercentage * 100)+\"%\"}} className = 'current-volume-bar'></div>\n\n        \n\n    </div>\n    \n\n</div>;\n}\n\nexport default VolumeControls;","import React from 'react';\nimport {useState} from 'react';\nimport ProgressControls from './ProgressControls';\nimport Forward10Icon from '@material-ui/icons/Forward10';\nimport Replay10Icon from '@material-ui/icons/Replay10';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport Episodes from '@material-ui/icons/AmpStories';\nimport SpeedIcon from '@material-ui/icons/Speed';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\nimport VolumeControls from './VolumeControls';\n\n\nfunction Controls(props) {\n\n  const[speedMenu, setSpeedMenu] = useState(false);\n  const[volumeMenu, setVolumeMenu] = useState(false);\n  \n\n  const currentSpeedStyle = {background:\"gray\",\n    color: \"white\",\n    opacity: \".7\"};\n\n  function showSpeedMenu() {\n    setSpeedMenu(true);\n  \n  }\n\n  function hideSpeedMenu() {\n    // setSpeedMenu(false);\n  }\n\n  function showVolumeMenu() {\n    setVolumeMenu(true);\n  }\n\n  function hideVolumeMenu() {\n    setVolumeMenu(false);\n  }\n\n\n  function findVolumeButton() {\n    if(props.volumePercentage<= .1) {\n      return <VolumeMuteIcon className = \"icon\"/>;\n    } else if (props.volumePercentage > .1 && props.volumePercentage <= .5) {\n      return <VolumeDownIcon className = \"icon\"/>;\n    } else {\n      return <VolumeUpIcon className = \"icon\" />;\n    }\n  }\n\n  const volumeIcon = findVolumeButton();\n\n  return <div className = 'controls-container'>\n\n  <ProgressControls goToTime = {props.goToTime}\n                    timeLeft = {props.timeLeft} \n                    percentageWatched = {props.percentageWatched}/>\n\n\n  <div className = \"controls\">\n\n  <button onClick = {props.handlePlay}>\n  {props.playButton ? <PlayArrowIcon className = \"icon\"/> \n  : <PauseIcon className = \"icon\" />}\n  </button>\n\n\n  <button onClick = {props.back10}><Replay10Icon className = \"icon\"/></button>\n\n\n  <button onClick = {props.forward10}><Forward10Icon className = \"icon\"/></button>\n\n\n<div className = \"volume-controls-wrapper\">\n{ volumeMenu &&\n  <VolumeControls \n  goToVolume = {props.goToVolume}\n  volumePercentage = {props.volumePercentage}\n   hideVolume = {hideVolumeMenu} \n   showVolume = {showVolumeMenu}/>}\n\n  <button onMouseEnter = {showVolumeMenu} onMouseLeave = {hideVolumeMenu} onClick = {props.mute}>\n  {props.muteButton ? <VolumeOffIcon className = \"icon\"/> : volumeIcon }\n  </button>\n  </div>\n\n\n  <p className = \"name\">\n    <span className = \"title\">Test Video</span>\n    <span className = \"episode\"> Big Buck Bunny</span>\n  </p>\n\n  <button><HelpOutlineIcon className = \"icon\"/></button>\n  <button><SkipNextIcon className = \"icon\" /></button>\n  <button><Episodes className = \"icon\"/></button>\n  <button><SubtitlesIcon className = \"icon\"/></button>\n\n\n\n\n\n<div className = \"speed-menu\"> {speedMenu && <div className = \"speed-container\" onMouseEnter = {showSpeedMenu} onMouseLeave = {hideSpeedMenu}>\n<ul >\n  <li  style = {props.videoSpeed === 0.5 ? currentSpeedStyle : {}} onClick = {() => {\n    props.changeSpeed(0.5);\n  }}>0.5x</li> \n  <li style = {props.videoSpeed === 0.75 ? currentSpeedStyle : {}} onClick = {() => {\n    props.changeSpeed(0.75);\n  }}>0.75x</li>\n  <li style = {props.videoSpeed === 1 ? currentSpeedStyle : {}} onClick = {() => {\n    props.changeSpeed(1);\n  }}>1x</li>\n  <li style = {props.videoSpeed === 1.25 ? currentSpeedStyle : {}} onClick = {() => {\n    props.changeSpeed(1.25);\n  }}>1.25x</li>\n  <li style = {props.videoSpeed === 1.5 ? currentSpeedStyle : {}} onClick = {() => {\n    props.changeSpeed(1.5);\n  }}>1.5x</li>\n  <li style = {props.videoSpeed === 2 ? currentSpeedStyle : {}} onClick = {() => {\n    props.changeSpeed(2);\n  }}>2x</li> \n</ul></div>}\n  <button onMouseEnter = {showSpeedMenu} onMouseLeave = {hideSpeedMenu}> \n  <SpeedIcon className = \"icon\"/>\n  </button>\n</div>\n\n\n\n  <button onClick = {props.fullscreen}>\n  {props.fullscreenIcon ? <FullscreenIcon className = \"icon\"/> : <FullscreenExitIcon className = \"icon\"/>} \n  \n  </button>\n\n\n  </div>\n  </div>;\n}\n\n\nexport default Controls;","import React, {useRef} from 'react';\nimport {useState} from 'react';\nimport {useEffect} from 'react';\nimport Controls from './Controls';\n\n\nfunction Video() {\n\n  const thisVideo = useRef(null);\n  const thisVideoContainer = useRef(null);\n  const [isPlaying, togglePlay] = useState(false);\n  const [isMuted, toggleMute] = useState(false);\n  const [isFullscreen, toggleFullscreen] = useState(false);\n  const [percentageWatched, setPercentageWatched ] = useState(0);\n  const [listened, updateListened] = useState(false);\n  const [timeLeft, updateTimeLeft] = useState(0);\n  const [videoSpeed, updateSpeed] = useState(1);\n  const [volumePercentage, updateVolume] = useState([.5,0]);\n\n\n//////////play\n\n  function handlePlay() {\n    if(!isPlaying) {\n      thisVideo.current.play();\n\n      \n\n    } else {\n      thisVideo.current.pause();\n    }\n    togglePlay(!isPlaying);\n  }\n\n\n  function back10() {\n    thisVideo.current.currentTime -= 10;\n  }\n\n  function forward10() {\n    thisVideo.current.currentTime += 10;\n  }\n\n  function goToTime(event) {\n    let target = event.target;\n    const parent = target.offsetParent;\n    const time = (event.pageX - (target.offsetLeft + parent.offsetLeft))/(target.offsetWidth);\n    thisVideo.current.currentTime = time*thisVideo.current.duration;\n  }\n\n  //////////volume\n  function mute() {\n\n      if(!isMuted) {\n        thisVideo.current.volume = volumePercentage[1];\n      } else {\n        thisVideo.current.volume = volumePercentage[0];\n      }\n\n      thisVideo.current.muted = !thisVideo.current.muted;\n      toggleMute(!isMuted);\n      console.log(\"clicked\");\n  }\n\n  function changeVolume(value) {\n    thisVideo.current.volume = value;\n    updateVolume([value, volumePercentage[1]]);\n    toggleMute(false);\n  }\n\n  function goToVolume(event) {\n    let target = event.target;\n    let values = target.getBoundingClientRect()\n    const top = values.top;\n    const bottom = values.bottom;\n    const distance = event.pageY;\n    const result = Math.abs((bottom-distance)/(bottom-top));\n    changeVolume(Math.min(result, 1));\n  }\n\n\n\n\n\n  //////////screen\n\n  function fullscreen() {\n\n    if(!isFullscreen) {\n      thisVideoContainer.current.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n    toggleFullscreen(!isFullscreen);\n  }\n\n  document.addEventListener('fullscreenchange', () => {\n    if(!document.fullscreenElement) {\n      toggleFullscreen(false);\n    } else {\n      toggleFullscreen(true);\n    }\n  })\n\n  function changeSpeed(value) {\n    thisVideo.current.playbackRate = value;\n    updateSpeed(value);\n  }\n  \n//////////time\n     \n  useEffect(() => {\n    if(!listened) {\n    thisVideo.current.addEventListener('timeupdate', () => {\n      setPercentageWatched(((thisVideo.current.currentTime / thisVideo.current.duration)*100)+\"%\");\n      updateTimeLeft(thisVideo.current.duration - thisVideo.current.currentTime);\n      updateListened(true);\n    })\n  }\n});\n\n\n\n\n\n\n\n\n//////////\n  return <div ref = {thisVideoContainer} className = \"video-container\">\n  <video ref = {thisVideo} src = \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\" \n    loop ></video>\n\n  <Controls \n    handlePlay = {handlePlay} \n    playButton = {!isPlaying}\n    back10 = {back10}\n    forward10 = {forward10}\n    mute = {mute}\n    muteButton = {isMuted}\n    fullscreen = {fullscreen}\n    fullscreenIcon = {!isFullscreen}\n    percentageWatched = {percentageWatched}\n    timeLeft = {timeLeft}\n    goToTime = {goToTime}\n    changeSpeed = {changeSpeed}\n    videoSpeed = {videoSpeed}\n    volumePercentage = {isMuted ? volumePercentage[1] : volumePercentage[0]}\n    goToVolume = {goToVolume}\n  />\n</div>;\n}\n\nexport default Video;","import React from \"react\";\nimport Video from './Video';\n\nfunction App() {\n  return ( <Video />\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}